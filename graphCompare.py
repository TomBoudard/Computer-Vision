#! /usr/bin/env python

from matplotlib import pyplot as plt

def main():

    SimpleTrainLoss = [0.5880,0.4041,0.3442,0.2645,0.2097,0.1949,0.1689,0.1395,0.1227,0.1209,0.0976,0.0953,0.0832,0.0713,0.0574,0.0497,0.0386,0.0381,0.0339,0.0362]
    SimpleTrainAccuracy = [0.8591635916359164,0.9102091020910209,0.9366543665436654,0.9575645756457565,0.972939729397294,0.984009840098401,0.980319803198032,0.9907749077490775,0.992619926199262,0.991389913899139,0.992619926199262,0.995079950799508,0.9956949569495694,0.996309963099631,0.997539975399754,0.997539975399754,0.9981549815498155,0.9969249692496925,0.998769987699877,0.997539975399754]
    SimpleValidationLoss = [0.7009,0.5234,0.4432,0.3437,0.2801,0.2606,0.2484,0.2009,0.1854,0.1887,0.1513,0.1526,0.1454,0.1360,0.1046,0.0921,0.0805,0.0785,0.0725,0.0848]
    SimpleValidationAccuracy = [0.8029556650246306,0.8620689655172413,0.896551724137931,0.9261083743842364,0.9507389162561576,0.9605911330049262,0.9359605911330049,0.9704433497536946,0.9556650246305419,0.9655172413793104,0.9901477832512315,0.9802955665024631,0.9704433497536946,0.9704433497536946,0.9901477832512315,0.9950738916256158,0.9950738916256158,0.9901477832512315,0.9950738916256158,0.9802955665024631]
    SimpleTimeEpoch = [7.646265268325806,6.9326701164245605,7.031425476074219,7.028519153594971,7.1592535972595215,6.97786021232605,7.091705322265625,6.836801767349243,7.017486572265625,6.897790193557739,6.810441017150879,6.950498342514038,6.867539644241333,6.9382641315460205,6.8497302532196045,6.960991382598877,7.409451007843018,7.175750494003296,7.06497597694397,7.231262683868408]

    DeepTrainLoss = [0.3509, 0.0613, 0.0237, 0.0074, 0.0050, 0.0494, 0.0178, 0.0037, 0.1271, 0.2161, 0.0004, 0.0019, 0.0154, 0.1261, 0.0100, 0.0006, 0.0002, 0.0035, 0.0005, 0.0035]
    DeepTrainAccuracy = [0.8899138991389914, 0.9809348093480935, 0.995079950799508, 0.9993849938499385, 0.998769987699877, 0.9846248462484625, 0.9932349323493235, 0.998769987699877, 0.9710947109471094, 0.9551045510455105, 1.0, 0.9993849938499385, 0.995079950799508, 0.9600246002460024, 0.997539975399754, 1.0, 1.0, 0.998769987699877, 1.0, 0.9981549815498155]
    DeepValidationLoss = [0.4754, 0.1062, 0.0538, 0.0535, 0.0239, 0.1062, 0.0189, 0.0576, 0.1712, 0.3059, 0.0284, 0.0324, 0.0776, 0.1692, 0.0877, 0.0522, 0.0297, 0.0098, 0.0884, 0.1148]
    DeepValidationAccuracy = [0.8275862068965517, 0.9753694581280788, 0.9704433497536946, 0.9802955665024631, 0.9901477832512315, 0.9704433497536946, 0.9950738916256158, 0.9852216748768473, 0.9704433497536946, 0.9408866995073891, 0.9950738916256158, 0.9901477832512315, 0.9852216748768473, 0.9458128078817734, 0.9802955665024631, 0.9852216748768473, 0.9950738916256158, 0.9950738916256158, 0.9753694581280788, 0.9852216748768473]
    DeepTimeEpoch = [13.205830335617065, 12.417730808258057, 12.498355150222778, 12.489494800567627, 12.690099477767944, 12.545154809951782, 12.46587061882019, 12.40890097618103, 12.60106348991394, 12.612815141677856, 12.484760046005249, 12.547142267227173, 12.501956701278687, 12.509293556213379, 12.479721546173096, 12.542161464691162, 12.783897161483765, 12.520094156265259, 12.53674030303955, 12.466043472290039]

    VGG11TrainLoss = [0.1257, 0.0118, 0.0015, 0.0387, 0.0049, 0.0036, 0.0094, 0.0108, 0.0008, 0.0004, 0.0113, 0.0003, 0.0075, 0.0022, 0.0176, 0.0001, 0.0365, 0.0067, 0.0003, 0.0046]
    VGG11TrainAccuracy = [0.9575645756457565, 0.996309963099631, 1.0, 0.9920049200492005, 0.998769987699877, 0.9993849938499385, 0.9969249692496925, 0.997539975399754, 1.0, 1.0, 0.996309963099631, 1.0, 0.9969249692496925, 0.9993849938499385, 0.995079950799508, 1.0, 0.9944649446494465, 0.997539975399754, 1.0, 0.998769987699877]
    VGG11ValidationLoss = [0.1999, 0.0872, 0.0251, 0.0375, 0.0806, 0.0327, 0.0521, 0.0131, 0.0396, 0.0095, 0.1360, 0.0577, 0.0136, 0.0178, 0.0731, 0.0105, 0.0983, 0.0210, 0.0536, 0.0424]
    VGG11ValidationAccuracy = [0.9408866995073891, 0.9655172413793104, 0.9901477832512315, 0.9901477832512315, 0.9753694581280788, 0.9901477832512315, 0.9802955665024631, 0.9950738916256158, 0.9901477832512315, 1.0, 0.9704433497536946, 0.9852216748768473, 0.9950738916256158, 0.9950738916256158, 0.9950738916256158, 0.9950738916256158, 0.9852216748768473, 0.9950738916256158, 0.9901477832512315, 0.9901477832512315]
    VGG1TimeEpoch = [12.220308780670166, 11.327577114105225, 11.031909465789795, 11.202178716659546, 11.194658756256104, 11.241527080535889, 11.162894248962402, 11.203978061676025, 11.226507425308228, 11.334100008010864, 11.363579034805298, 11.139707565307617, 11.143024682998657, 11.161739587783813, 11.226151466369629, 11.26097321510315, 11.175568580627441, 11.094703435897827, 11.290182113647461, 11.280150413513184]

    ResnetTrainLoss = [0.0038, 0.0006, 0.0002, 0.0001, 7.6078e-05, 0.0003, 0.0001, 2.8533e-05, 2.2383e-05, 0.0009, 0.0002, 2.1042e-05, 8.8840e-06, 6.5251e-06, 4.7283e-06, 4.0805e-06, 3.1617e-06, 2.6650e-06, 2.2527e-06, 8.1694e-06]
    ResnetTrainAccuracy = [0.9993849938499385, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9993849938499385, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    ResnetValidationLoss = [0.0082, 0.0015, 0.0010, 0.0010, 0.0002, 0.0005, 0.0011, 0.0026, 0.0008, 0.0199, 0.0066, 0.0007, 0.0009, 0.0002, 0.0004, 0.0004, 0.0019, 0.0009, 0.0005, 0.0002]
    ResnetValidationAccuracy = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9950738916256158, 0.9950738916256158, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    ResnetTimeEpoch = [8.461593627929688, 7.98030686378479, 7.631261110305786, 7.677231311798096, 7.490617990493774, 7.67822527885437, 7.522849082946777, 7.651966333389282, 7.5683488845825195, 7.665361404418945, 7.489820718765259, 7.57148814201355, 7.505127191543579, 7.476977109909058, 7.487614631652832, 7.503897666931152, 7.539617300033569, 7.524779558181763, 7.6717164516448975, 7.577445030212402]

    print(sum(SimpleTimeEpoch)/len(SimpleTimeEpoch))
    print(sum(DeepTimeEpoch)/len(DeepTimeEpoch))
    print(sum(VGG1TimeEpoch)/len(VGG1TimeEpoch))
    print(sum(ResnetTimeEpoch)/len(ResnetTimeEpoch))

    SimpleTotalTimeEpoch = [SimpleTimeEpoch[0]]
    DeepTotalTimeEpoch = [DeepTimeEpoch[0]]
    VGG1TotalTimeEpoch = [VGG1TimeEpoch[0]]
    ResnetTotalTimeEpoch = [ResnetTimeEpoch[0]]
    for i in range(19):
        SimpleTotalTimeEpoch.append(SimpleTimeEpoch[i+1]+SimpleTotalTimeEpoch[-1])
        DeepTotalTimeEpoch.append(DeepTimeEpoch[i+1]+DeepTotalTimeEpoch[-1])
        VGG1TotalTimeEpoch.append(VGG1TimeEpoch[i+1]+VGG1TotalTimeEpoch[-1])
        ResnetTotalTimeEpoch.append(ResnetTimeEpoch[i+1]+ResnetTotalTimeEpoch[-1])

    print(DeepTotalTimeEpoch)

    plt.style.use("ggplot")
    plt.figure()

    x = [e+1 for e in range(20)]

    plt.subplot(2, 2, 1)
    plt.plot(x, SimpleTrainLoss, label="Simple Training loss", color="C0")
    plt.plot(x, SimpleValidationLoss, label="Simple Validation loss", color="C0", linestyle="--")
    plt.plot(x, DeepTrainLoss, label="Deep training loss", color="C1")
    plt.plot(x, DeepValidationLoss, label="Deep validation loss", color="C1", linestyle="--")
    plt.plot(x, VGG11TrainLoss, label="VGG11 training loss", color="C2")
    plt.plot(x, VGG11ValidationLoss, label="VGG11 validation loss", color="C2", linestyle="--")
    plt.plot(x, ResnetTrainLoss, label="ResNet training loss", color="C3")
    plt.plot(x, ResnetValidationLoss, label="ResNet validation loss", color="C3", linestyle="--")

    plt.legend()
    plt.title("Loss")
    plt.xlabel("epoch")
    plt.ylabel("loss")
    plt.xticks(x)

    plt.subplot(2, 2, 2)
    plt.plot(x, SimpleTrainAccuracy, label="Simple training accuracy", color="C0")
    plt.plot(x, SimpleValidationAccuracy, label="Simple validation accuracy", color="C0", linestyle="--")
    plt.plot(x, DeepTrainAccuracy, label="Deep training accuracy", color="C1")
    plt.plot(x, DeepValidationAccuracy, label="Deep validation accuracy", color="C1", linestyle="--")
    plt.plot(x, VGG11TrainAccuracy, label="VGG11 training accuracy", color="C2")
    plt.plot(x, VGG11ValidationAccuracy, label="VGG11 validation accuracy", color="C2", linestyle="--")
    plt.plot(x, ResnetTrainAccuracy, label="ResNet training accuracy", color="C3")
    plt.plot(x, ResnetValidationAccuracy, label="ResNet validation accuracy", color="C3", linestyle="--")

    plt.legend()
    plt.title("Accuracy")
    plt.xlabel("epoch")
    plt.ylabel("accuracy")
    plt.xticks(x)

    plt.subplot(2, 2, 3)
    plt.plot(x, SimpleTotalTimeEpoch, label="Simple computation time", color="C0")
    plt.plot(x, DeepTotalTimeEpoch, label="Deep computation time", color="C1")
    plt.plot(x, VGG1TotalTimeEpoch, label="VGG11 computation time", color="C2")
    plt.plot(x, ResnetTotalTimeEpoch, label="ResNet computation time", color="C3")

    plt.legend()
    plt.title("Cumulative time")
    plt.xlabel("epoch")
    plt.ylabel("time (s)")
    plt.xticks(x)

    # plt.savefig('Graph.png')
    plt.show()


if __name__ == '__main__':
    main()